# K6 Load Test: <%= title %>

## Total Requests

- **HTTP Requests**: <%= data.metrics.http_reqs ? data.metrics.http_reqs.count : 0 %>
- **gRPC Requests**: <%= data.metrics.grpc_reqs ? data.metrics.grpc_reqs.count : 0 %>

## Failed Requests

- **Passes**: <%= data.metrics.checks ? data.metrics.checks.passes : 0 %>
- **Failures**: <%= data.metrics.checks ? data.metrics.checks.fails : 0 %>

## Breached Thresholds

- <%= thresholdFailures %>

## Failed Checks

- <%= data.metrics.checks ? data.metrics.checks.fails : 0 %>

## Request Metrics

### HTTP Requests

| Metric                  | Count   | Rate    | Average | Maximum | Median  | Minimum | 90th Percentile | 95th Percentile |
| ----------------------- | ------- | ------- | ------- | ------- | ------- | ------- | --------------- | --------------- |
<% if (data.metrics.http_reqs && data.metrics.http_reqs.values) {
    for (metricName of Object.keys(data.metrics.http_reqs.values)) { %>
| **<%= metricName %>** | <%= data.metrics.http_reqs.values[metricName].count.toFixed(2) %> | <%= data.metrics.http_reqs.values[metricName].rate.toFixed(2) %> | <%= data.metrics.http_reqs.values[metricName].avg.toFixed(2) %> | <%= data.metrics.http_reqs.values[metricName].max.toFixed(2) %> | <%= data.metrics.http_reqs.values[metricName].med.toFixed(2) %> | <%= data.metrics.http_reqs.values[metricName].min.toFixed(2) %> | <%= data.metrics.http_reqs.values[metricName]['p(90)'].toFixed(2) %> | <%= data.metrics.http_reqs.values[metricName]['p(95)'].toFixed(2) %> |
<%   }
} %>

### Custom Metrics

| Metric                       | Count | Rate  | Average | Maximum | Median | Minimum | 90th Percentile | 95th Percentile |
| ---------------------------- | ----- | ----- | ------- | ------- | ------ | ------- | --------------- | --------------- |
<% for (metricName of Object.keys(data.metrics).filter(metricName => metricName !== 'http_reqs' && metricName !== 'grpc_reqs' && metricName !== 'checks' && metricName !== 'iterations' && metricName !== 'vus' && metricName !== 'data_received' && metricName !== 'data_sent' && metricName !== 'thresholds' && metricName !== 'environment' && metricName !== 'start_time')) { %>
| **<%= metricName %>** | <%= data.metrics[metricName].count.toFixed(2) %> | <%= data.metrics[metricName].rate.toFixed(2) %> | <%= data.metrics[metricName].avg.toFixed(2) %> | <%= data.metrics[metricName].max.toFixed(2) %> | <%= data.metrics[metricName].med.toFixed(2) %> | <%= data.metrics[metricName].min.toFixed(2) %> | <%= data.metrics[metricName]['p(90)'].toFixed(2) %> | <%= data.metrics[metricName]['p(95)'].toFixed(2) %> |
<% } %>

### Note

All times are in milli-seconds

## Other Stats

### Checks

- **Passed**: <%= data.metrics.checks ? data.metrics.checks.passes : 0 %>
- **Failed**: <%= data.metrics.checks ? data.metrics.checks.fails : 0 %>

### Iterations

- **Total**: <%= data.metrics.iterations ? data.metrics.iterations.count : 0 %>
- **Rate**: <%= data.metrics.iterations ? data.metrics.iterations.rate.toFixed(2) + '/s' : '0' %>

### Virtual Users

- **Min**: <%= data.metrics.vus ? data.metrics.vus.min : 0 %>
- **Max**: <%= data.metrics.vus ? data.metrics.vus.max : 0 %>

### Requests

- **Total**: <%= data.metrics.http_reqs ? data.metrics.http_reqs.count : 0 %>
- **Rate**: <%= data.metrics.http_reqs ? data.metrics.http_reqs.rate.toFixed(2) + '/s' : '0' %>

### Data Received

- **Total**: <%= (data.metrics.data_received ? data.metrics.data_received.count / 1000000 : 0).toFixed(2) %> MB
- **Rate**: <%= (data.metrics.data_received ? data.metrics.data_received.rate / 1000000 : 0).toFixed(2) %> mB/s

### Data Sent

- **Total**: <%= (data.metrics.data_sent ? data.metrics.data_sent.count / 1000000 : 0).toFixed(2) %> MB
- **Rate**: <%= (data.metrics.data_sent ? data.metrics.data_sent.rate / 1000000 : 0).toFixed(2) %> mB/s

## Checks & Groups

<% for (group of data.groups) { %>
### Group - <%= group.name %>

| Check Name     | Passes | Failures |
| -------------- | ------ | -------- |
<% for (check of group.checks) { %>
| <%= check.name %> | <%= check.passes %> | <%= check.fails %> |
<% } %>
<% } %>

### Other Checks

| Check Name     | Passes | Failures |
| -------------- | ------ | -------- |
<% for (check of data.checks) { %>
| <%= check.name %> | <%= check.passes %> | <%= check.fails %> |
<% } %>

K6 Markdown Reporter v<%= version %> [GitHub](https://github.com/metrico/k6-reporter)
